import logging
import asyncio

from aiogram.dispatcher.filters import Command
from aiogram.types import Message, CallbackQuery

from keyboards.inline.callback_datas import menu_callBack
from keyboards.inline.choice_buttons import choice, main_menu_keyboard, want_to_know_more_detail, \
    increase_rate_growth_btn
from loader import dp, vega_assistant


@dp.message_handler(Command("start"))
async def start_chat(message: Message):
    await message.answer_photo(open('resources/hello_logo.jpg', 'rb'))
    # await asyncio.sleep(0.5)
    await message.answer("–Ø —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –∏ –ø–æ–¥—Ä–æ–±–Ω–æ —Ä–∞—Å—Å–∫–∞–∂—É –í–∞–º –æ CryptoBank ¬´VEGA¬ª")
    # await asyncio.sleep(1.5)
    await message.answer("¬´–°–µ–π—á–∞—Å –≤–Ω–∏–∑—É –ø–æ—è–≤–∏—Ç—Å—è –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é. –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π "
                         "–≤–æ–ø—Ä–æ—Å, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ –∏ –ø–æ–ª—É—á–∏—Ç–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π –æ—Ç–≤–µ—Ç üëç¬ª")
    # await asyncio.sleep(2.5)
    await message.answer("¬´–í–æ—Ç –∫–Ω–æ–ø–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é üëá¬ª",
                         reply_markup=choice)


@dp.callback_query_handler(menu_callBack.filter(button_name="menu"))
async def show_menu_buttons(call: CallbackQuery, callback_data: dict):
    await call.answer(cache_time=60)
    logging.info(f"user={call.message.chat.username}, callback_data='{callback_data}'")
    await call.message.answer("–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu_keyboard)


@dp.callback_query_handler(menu_callBack.filter(button_name="about_project"))
async def click_about_project(call: CallbackQuery, callback_data: dict):
    await call.answer(cache_time=60)
    logging.info(f"user={call.message.chat.username}, callback_data='{callback_data}'")

    await call.message.answer_photo(open('resources/vega_logo.png', 'rb'))
    # await asyncio.sleep(1)
    await call.message.answer("¬´–¢–µ–∫—Å—Ç #1¬ª")
    # await asyncio.sleep(1)
    await call.message.answer("¬´–¢–µ–∫—Å—Ç #2¬ª")
    # await asyncio.sleep(1)
    await call.message.answer("¬´–í–æ—Ç –∫–æ–º–∞–Ω–¥–∞ —Å–æ–∑–¥–∞—Ç–µ–ª–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ üëá¬ª")
    # await asyncio.sleep(1)
    await call.message.answer_photo(open('resources/ceo.jpg', 'rb'))
    # await asyncio.sleep(1)
    await call.message.answer("¬´–°–æ–æ—Å–Ω–æ–≤–∞—Ç–µ–ª—å –∏ CEO –ø—Ä–æ–µ–∫—Ç–∞¬ª")
    # await asyncio.sleep(1)
    await call.message.answer_photo(open('resources/founder_ceo.jpg', 'rb'))
    # await asyncio.sleep(1)
    await call.message.answer("¬´–°–æ–æ—Å–Ω–æ–≤–∞—Ç–µ–ª—å –∏ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è¬ª")
    # await asyncio.sleep(1)
    await call.message.answer_photo(open('resources/main_manager.jpg', 'rb'))
    # await asyncio.sleep(1)
    await call.message.answer("¬´–°–æ–æ—Å–Ω–æ–≤–∞—Ç–µ–ª—å –∏ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –∫–æ–º–∞–Ω–¥—ã¬ª")
    # await asyncio.sleep(1)
    await call.message.answer_photo(open('resources/tech_lead_logo.jpg', 'rb'))
    # await asyncio.sleep(1)
    await call.message.answer("¬´–ü—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã–π —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º¬ª")
    # await asyncio.sleep(1)
    await call.message.answer_photo(open('resources/seller_expert_logo.png', 'rb'))
    # await asyncio.sleep(1)
    await call.message.answer("¬´–¢–µ–ø–µ—Ä—å —è —Ä–∞—Å—Å–∫–∞–∂—É –æ —Ç–æ–º, —á–µ–º CryptoBank ¬´VEGA¬ª –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–ª–µ–∑–µ–Ω –¥–ª—è –∫–∞–∂–¥–æ–≥–æüëç¬ª")
    # await asyncio.sleep(1)
    await call.message.answer("¬´1Ô∏è‚É£ –°—Ç–∞–≤ –∫–ª–∏–µ–Ω—Ç–æ–º CryptoBank ¬´VEGA¬ª –í—ã–º–æ–∂–µ—Ç–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ —Å–±–µ—Ä–µ—á—å –≤–∞—à–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞¬ª")
    # await asyncio.sleep(1)
    await call.message.answer("¬´2Ô∏è‚É£ –í—ã –º–æ–∂–µ—Ç–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –ø—Ä–∏—É–º–Ω–æ–∂–∏—Ç—å —Å–≤–æ–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞ —Ä–æ—Å—Ç–µ –∫—É—Ä—Å–∞ –º–æ–Ω–µ—Ç(—Ç–æ–∫–µ–Ω–æ–≤)¬ª")
    # await asyncio.sleep(1)
    await call.message.answer("¬´3Ô∏è‚É£ –í—ã –º–æ–∂–µ—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ, —Å–æ–∑–¥–∞–≤–∞—è —Å–≤–æ—é –∫–ª–∏–µ–Ω—Ç—Å–∫—É—é –±–∞–∑—É¬ª")
    # await asyncio.sleep(1)
    await call.message.answer("¬´4Ô∏è‚É£ –¢–µ–∫—Å—Ç #3¬ª")
    # await asyncio.sleep(1)
    # await call.message.answer("¬´–ü—Ä–æ —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ? üëá¬ª")
    # await asyncio.sleep(1)
    await call.message.answer("¬´–ü—Ä–æ —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ? üëá¬ª", reply_markup=want_to_know_more_detail)


@dp.callback_query_handler(menu_callBack.filter(button_name="safely_safeguard_your_funds"))
async def safely_safeguard_your_funds(call: CallbackQuery, callback_data: dict):
    await call.answer(cache_time=60)
    logging.info(f"user={call.message.chat.username}, callback_data='{callback_data}'")

    await call.message.answer_photo(open('resources/safe_funds.jpeg', 'rb'))
    # await asyncio.sleep(1)
    await call.message.answer(
        "¬´–¢–µ–∫—Å—Ç #4 "
        "—Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞—Ö –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤ –≤ –Ω–∞—à–µ–º –ø—Ä–æ–µ–∫—Ç–µ üí∏"
        "–¶–µ–ª–µ–≤–∞—è –≥–æ–¥–æ–≤–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–Ω–∞¬ª")
    # await asyncio.sleep(1)
    await call.message.answer("¬´–¢–µ–∫—Å—Ç #5 —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ –ø—Ä–∏–Ω—Ü–∏–ø–∏–∞–ª—å–Ω–æ–π —Å—Ö–µ–º–µ —Ö—Ä–∞–Ω–µ–Ω–∏—è USDT üí∏¬ª")
    await call.message.answer('–ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –ø—Ä–∏—É–º–Ω–æ–∂–∏—Ç—å —Ä–æ—Å—Ç –∫—É—Ä—Å–∞', reply_markup=increase_rate_growth_btn)

# –ü–æ–ø—Ä–æ–±—É–π–µ–º –æ—Ç–ª–æ–≤–∏—Ç—å –ø–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–º—É —Ñ–∏–ª—å—Ç—Ä—É, –≥–¥–µ –≤ –Ω–∞—à–µ–º call.data —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è "pear"
# @dp.callback_query_handler(text_contains="pear")
# async def buying_pear(call: CallbackQuery):
#     # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å—Ä–∞–∑—É —Å–¥–µ–ª–∞—Ç—å answer, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å "—á–∞—Å–∏–∫–∏" –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É.
#     # –£–∫–∞–∂–µ–º cache_time, —á—Ç–æ–±—ã –±–æ—Ç –Ω–µ –ø–æ–ª—É—á–∞–ª –∫–∞–∫–æ–µ-—Ç–æ –≤—Ä–µ–º—è –∞–ø–¥–µ–π—Ç—ã, —Ç–æ–≥–¥–∞ –Ω–∏–∂–Ω–∏–π –∫–æ–¥ –Ω–µ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è.
#     await call.answer(cache_time=60)
#
#     callback_data = call.data
#
#     # –û—Ç–æ–±—Ä–∞–∑–∏–º —á—Ç–æ —É –Ω–∞—Å –ª–µ–∂–∏—Ç –≤ callback_data
#     # logging.info(f"callback_data='{callback_data}'")
#     # –í Python 3.8 –º–æ–∂–Ω–æ —Ç–∞–∫, –µ—Å–ª–∏ —É –≤–∞—Å –æ—à–∏–±–∫–∞, —Ç–æ —Å–¥–µ–ª–∞–π—Ç–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–º —Å–ø–æ—Å–æ–±–æ–º!
#     logging.info(f"{callback_data=}")
#
#     await call.message.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫—É–ø–∏—Ç—å –≥—Ä—É—à—É. –ì—Ä—É—à–∞ –≤—Å–µ–≥–æ –æ–¥–Ω–∞. –°–ø–∞—Å–∏–±–æ.",
#                               reply_markup=pear_keyboard)


# –ü–æ–ø—Ä–æ–±—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–∏–ª—å—Ç—Ä –æ—Ç CallbackData
# @dp.callback_query_handler(buy_callback.filter(item_name="apple"))
# async def buying_apples(call: CallbackQuery, callback_data: dict):
#     await call.answer(cache_time=60)
#
#     # –í—ã–≤–µ–¥–µ–º callback_data –∏ —Ç—É—Ç, —á—Ç–æ–±—ã —Å—Ä–∞–≤–Ω–∏—Ç—å —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º –≤–∞—Ä–∏–∞–Ω—Ç–æ–º.
#     logging.info(f"{callback_data=}")
#
#     quantity = callback_data.get("quantity")
#     await call.message.answer(f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫—É–ø–∏—Ç—å —è–±–ª–æ–∫–∏. –Ø–±–ª–æ–∫ –≤—Å–µ–≥–æ {quantity}. –°–ø–∞—Å–∏–±–æ.",
#                               reply_markup=apples_keyboard)


# @dp.callback_query_handler(text="cancel")
# async def cancel_buying(call: CallbackQuery):
#     # –û—Ç–≤–µ—Ç–∏–º –≤ –æ–∫–æ—à–∫–µ —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º!
#     await call.answer("–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —ç—Ç—É –ø–æ–∫—É–ø–∫—É!", show_alert=True)
#
#     # –í–∞—Ä–∏–∞–Ω—Ç 1 - –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Å—Ç—É—é –∫–ª–≤–∞–∏–∞—Ç—É—Ä—É –∏–∑–º–µ–Ω—è—è —Å–æ–æ–±—â–µ–Ω–∏–µ, –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –µ–µ —É–±—Ä–∞—Ç—å –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è!
#     await call.message.edit_reply_markup(reply_markup=None)

# –í–∞—Ä–∏–∞–Ω—Ç 2 –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (–ø–æ API)
# await bot.edit_message_reply_markup(chat_id=call.from_user.id,
#                                     message_id=call.message.message_id,
#                                     reply_markup=None)
